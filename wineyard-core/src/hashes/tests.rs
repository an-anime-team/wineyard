use std::io::Write;

use super::{HashAlgorithm, Hasher};

fn test(
    algorithm: HashAlgorithm,
    seed: &[u8],
    plain_hash: &[u8],
    seeded_hash: &[u8]
) -> std::io::Result<()> {
    let mut hasher = Hasher::new(algorithm);

    hasher.write_all(b"Hello, ")?;
    hasher.write_all(b"World!")?;
    hasher.flush()?;

    assert_eq!(hasher.finalize().0.as_ref(), plain_hash);

    let mut hasher = Hasher::with_seed(algorithm, seed);

    hasher.write_all(b"Hello, ")?;
    hasher.write_all(b"World!")?;
    hasher.flush()?;

    assert_eq!(hasher.finalize().0.as_ref(), seeded_hash);

    Ok(())
}

#[cfg(feature = "hashes-seahash")]
#[test]
#[inline]
fn seahash() -> std::io::Result<()> {
    test(
        HashAlgorithm::Seahash,
        &[1, 2, 3],
        &[46, 194, 87, 41, 102, 208, 6, 253],
        &[15, 68, 16, 132, 159, 217, 124, 198]
    )
}

#[cfg(feature = "hashes-crc32")]
#[test]
#[inline]
fn crc32() -> std::io::Result<()> {
    test(
        HashAlgorithm::Crc32,
        &[1, 2, 3],
        &[236, 74, 195, 208],
        &[44, 122, 195, 223]
    )
}

#[cfg(feature = "hashes-crc32c")]
#[test]
#[inline]
fn crc32c() -> std::io::Result<()> {
    test(
        HashAlgorithm::Crc32c,
        &[1, 2, 3],
        &[77, 85, 16, 104],
        &[254, 158, 142, 238]
    )
}

#[cfg(feature = "hashes-siphash")]
#[test]
#[inline]
fn siphash() -> std::io::Result<()> {
    test(
        HashAlgorithm::Siphash_1_3_64,
        &[1, 2, 3],
        &[41, 114, 161, 128, 56, 201, 39, 147],
        &[28, 65, 86, 45, 23, 84, 81, 0]
    )?;

    test(
        HashAlgorithm::Siphash_1_3_128,
        &[1, 2, 3],
        &[191, 107, 239, 175, 162, 213, 193, 236, 169, 129, 231, 119, 6, 126,
            238, 15],
        &[227, 33, 177, 149, 68, 10, 170, 130, 153, 177, 4, 29, 126, 221, 36,
            151]
    )?;

    test(
        HashAlgorithm::Siphash_2_4_64,
        &[1, 2, 3],
        &[38, 73, 109, 52, 239, 10, 39, 31],
        &[84, 30, 29, 45, 136, 148, 21, 253]
    )?;

    test(
        HashAlgorithm::Siphash_2_4_128,
        &[1, 2, 3],
        &[50, 170, 110, 242, 8, 65, 163, 227, 18, 89, 105, 46, 109, 105, 177,
            5],
        &[199, 119, 142, 204, 16, 201, 136, 9, 250, 16, 169, 240, 107, 249, 159,
            107]
    )?;

    Ok(())
}

#[cfg(feature = "hashes-xxh")]
#[test]
#[inline]
fn xxh() -> std::io::Result<()> {
    test(
        HashAlgorithm::Xxh_32,
        &[1, 2, 3],
        &[64, 7, 222, 80],
        &[255, 93, 8, 188]
    )?;

    test(
        HashAlgorithm::Xxh_64,
        &[1, 2, 3],
        &[196, 154, 172, 248, 8, 15, 228, 127],
        &[152, 105, 247, 202, 233, 103, 174, 56]
    )?;

    test(
        HashAlgorithm::Xxh3_64,
        &[1, 2, 3],
        &[96, 65, 93, 95, 97, 102, 2, 170],
        &[1, 27, 52, 134, 142, 40, 80, 38]
    )?;

    test(
        HashAlgorithm::Xxh3_128,
        &[1, 2, 3],
        &[83, 29, 242, 132, 68, 71, 221, 80, 119, 219, 3, 132, 44, 215, 83,
            149],
        &[118, 132, 118, 165, 211, 121, 213, 163, 95, 7, 217, 172, 120, 171,
            227, 8]
    )?;

    Ok(())
}

#[cfg(feature = "hashes-md5")]
#[test]
#[inline]
fn md5() -> std::io::Result<()> {
    test(
        HashAlgorithm::Md5,
        &[1, 2, 3],
        &[101, 168, 226, 125, 136, 121, 40, 56, 49, 182, 100, 189, 139, 127, 10,
            212],
        &[223, 25, 21, 184, 224, 189, 234, 1, 52, 213, 234, 56, 4, 225, 40, 181]
    )
}

#[cfg(feature = "hashes-sha1")]
#[test]
#[inline]
fn sha1() -> std::io::Result<()> {
    test(
        HashAlgorithm::Sha1,
        &[1, 2, 3],
        &[10, 10, 159, 42, 103, 114, 148, 37, 87, 171, 83, 85, 215, 106, 244,
            66, 248, 246, 94, 1],
        &[110, 21, 33, 168, 193, 179, 150, 207, 35, 234, 88, 175, 194, 0, 137,
            63, 199, 160, 244, 109]
    )
}

#[cfg(feature = "hashes-sha2")]
#[test]
#[inline]
fn sha2() -> std::io::Result<()> {
    test(
        HashAlgorithm::Sha2_224,
        &[1, 2, 3],
        &[114, 162, 61, 250, 65, 27, 166, 253, 224, 29, 191, 171, 243, 176, 10,
            112, 156, 147, 235, 242, 115, 220, 41, 226, 216, 178, 97, 255],
        &[97, 24, 207, 112, 222, 100, 182, 163, 5, 71, 157, 148, 43, 165, 175,
            178, 193, 227, 120, 234, 200, 78, 4, 83, 78, 169, 141, 64]
    )?;

    test(
        HashAlgorithm::Sha2_256,
        &[1, 2, 3],
        &[223, 253, 96, 33, 187, 43, 213, 176, 175, 103, 98, 144, 128, 158, 195,
            165, 49, 145, 221, 129, 199, 247, 10, 75, 40, 104, 138, 54, 33, 130,
            152, 111],
        &[193, 238, 224, 175, 110, 199, 8, 36, 115, 123, 220, 96, 3, 114, 211,
            137, 151, 159, 157, 96, 88, 41, 222, 176, 243, 0, 180, 162, 165,
            194, 126, 85]
    )?;

    test(
        HashAlgorithm::Sha2_384,
        &[1, 2, 3],
        &[84, 133, 204, 155, 51, 101, 180, 48, 93, 251, 78, 131, 55, 224, 165,
            152, 165, 116, 248, 36, 43, 241, 114, 137, 224, 221, 108, 32, 163,
            205, 68, 160, 137, 222, 22, 171, 74, 179, 8, 246, 62, 68, 177, 23,
            14, 181, 245, 21],
        &[140, 85, 224, 75, 7, 9, 192, 3, 75, 106, 195, 21, 61, 192, 244, 224,
            234, 5, 79, 19, 3, 1, 254, 66, 16, 46, 157, 240, 50, 192, 135, 200,
            13, 105, 171, 88, 52, 43, 124, 105, 32, 131, 149, 43, 106, 130, 109,
            254]
    )?;

    test(
        HashAlgorithm::Sha2_512,
        &[1, 2, 3],
        &[55, 77, 121, 74, 149, 205, 207, 216, 179, 89, 147, 24, 95, 239, 155,
            163, 104, 241, 96, 216, 218, 244, 50, 208, 139, 169, 241, 237, 30,
            90, 190, 108, 198, 146, 145, 224, 250, 47, 224, 0, 106, 82, 87, 14,
            241, 140, 25, 222, 244, 230, 23, 195, 60, 229, 46, 240, 166, 229,
            251, 227, 24, 203, 3, 135],
        &[80, 15, 129, 113, 236, 155, 240, 71, 94, 221, 253, 100, 4, 2, 93, 233,
            61, 104, 200, 97, 57, 158, 47, 13, 30, 185, 210, 133, 228, 216, 128,
            125, 45, 13, 207, 12, 90, 0, 142, 215, 148, 53, 73, 73, 180, 223,
            78, 243, 77, 170, 252, 101, 56, 94, 35, 191, 202, 242, 91, 95, 7,
            196, 220, 122]
    )?;

    test(
        HashAlgorithm::Sha2_512_224,
        &[1, 2, 3],
        &[118, 103, 69, 240, 88, 232, 160, 67, 143, 25, 222, 72, 174, 86, 234,
            95, 18, 63, 231, 56, 175, 57, 188, 160, 80, 167, 84, 122],
        &[246, 10, 91, 232, 10, 223, 81, 121, 65, 148, 121, 221, 130, 181, 91,
            195, 30, 87, 15, 62, 240, 227, 226, 210, 99, 164, 27, 39]
    )?;

    test(
        HashAlgorithm::Sha2_512_256,
        &[1, 2, 3],
        &[6, 134, 240, 166, 5, 151, 61, 193, 191, 3, 93, 30, 43, 155, 173, 25,
            133, 160, 191, 247, 18, 221, 216, 138, 189, 141, 37, 147, 229, 249,
            144, 48],
        &[57, 47, 25, 39, 101, 183, 99, 180, 246, 72, 122, 6, 192, 238, 152, 36,
            175, 53, 171, 8, 121, 94, 125, 150, 35, 98, 144, 63, 208, 22, 176,
            75]
    )?;

    Ok(())
}

#[cfg(feature = "hashes-sha3")]
#[test]
#[inline]
fn sha3() -> std::io::Result<()> {
    test(
        HashAlgorithm::Shake_128,
        &[1, 2, 3],
        &[43, 245, 230, 222, 230, 7, 159, 173, 96, 79, 87, 49, 148, 186, 132,
            38],
        &[67, 22, 239, 25, 172, 48, 194, 193, 178, 233, 158, 47, 149, 230, 193,
            91]
    )?;

    test(
        HashAlgorithm::Shake_256,
        &[1, 2, 3],
        &[179, 190, 151, 191, 217, 120, 131, 58, 101, 88, 140, 234, 232, 163,
            76, 245, 158, 149, 88, 90, 246, 32, 99, 230, 184, 157, 7, 137, 243,
            114, 66, 78],
        &[252, 192, 171, 184, 224, 227, 254, 37, 88, 16, 216, 209, 209, 253,
            182, 156, 156, 244, 139, 33, 192, 46, 106, 182, 59, 9, 172, 133,
            175, 75, 109, 162]
    )?;

    // FIXME: investigate these.

    // test(
    //     HashAlgorithm::TurboShake_128,
    //     &[1, 2, 3],
    //     &[],
    //     &[]
    // )?;

    // test(
    //     HashAlgorithm::TurboShake_256,
    //     &[1, 2, 3],
    //     &[],
    //     &[]
    // )?;

    test(
        HashAlgorithm::CShake_128,
        &[1, 2, 3],
        &[43, 245, 230, 222, 230, 7, 159, 173, 96, 79, 87, 49, 148, 186, 132,
            38],
        &[240, 65, 21, 127, 228, 158, 86, 17, 41, 245, 66, 158, 50, 60, 25, 189]
    )?;

    test(
        HashAlgorithm::CShake_256,
        &[1, 2, 3],
        &[179, 190, 151, 191, 217, 120, 131, 58, 101, 88, 140, 234, 232, 163,
            76, 245, 158, 149, 88, 90, 246, 32, 99, 230, 184, 157, 7, 137, 243,
            114, 66, 78],
        &[58, 137, 96, 39, 180, 76, 115, 31, 3, 61, 27, 16, 204, 181, 237, 110,
            32, 127, 99, 109, 3, 135, 228, 155, 97, 93, 240, 88, 112, 130, 243,
            54]
    )?;

    test(
        HashAlgorithm::Keccak_224,
        &[1, 2, 3],
        &[78, 170, 240, 231, 161, 228, 0, 239, 186, 113, 19, 7, 34, 225, 203,
            77, 89, 179, 42, 251, 64, 14, 101, 74, 254, 196, 248, 206],
        &[108, 216, 80, 200, 79, 124, 56, 119, 148, 211, 25, 34, 111, 59, 112,
            76, 127, 162, 185, 190, 237, 30, 246, 35, 249, 39, 87, 219]
    )?;

    test(
        HashAlgorithm::Keccak_256,
        &[1, 2, 3],
        &[172, 175, 50, 137, 215, 182, 1, 203, 209, 20, 251, 54, 196, 210, 156,
            133, 187, 253, 94, 19, 63, 20, 203, 53, 92, 63, 216, 217, 147, 103,
            150, 79],
        &[151, 45, 51, 216, 100, 250, 3, 160, 30, 141, 60, 73, 199, 246, 150,
            43, 153, 127, 100, 161, 251, 174, 47, 139, 90, 98, 21, 255, 107,
            119, 54, 210]
    )?;

    test(
        HashAlgorithm::Keccak_256_Full,
        &[1, 2, 3],
        &[172, 175, 50, 137, 215, 182, 1, 203, 209, 20, 251, 54, 196, 210, 156,
            133, 187, 253, 94, 19, 63, 20, 203, 53, 92, 63, 216, 217, 147, 103,
            150, 79, 236, 96, 68, 107, 115, 236, 157, 230, 165, 127, 245, 147,
            187, 144, 28, 73, 221, 102, 5, 177, 117, 187, 191, 216, 188, 179,
            52, 162, 169, 253, 234, 93, 44, 108, 70, 69, 60, 220, 84, 83, 50,
            192, 71, 105, 46, 44, 110, 238, 96, 184, 105, 2, 58, 242, 6, 80,
            173, 15, 61, 118, 139, 176, 229, 137, 32, 74, 100, 247, 42, 167, 62,
            125, 112, 211, 169, 222, 232, 255, 131, 82, 55, 27, 197, 118, 89,
            65, 114, 255, 54, 12, 23, 110, 96, 152, 90, 212, 156, 138, 4, 199,
            161, 51, 35, 254, 191, 210, 33, 14, 61, 253, 61, 141, 39, 53, 7,
            212, 10, 7, 196, 26, 234, 185, 234, 121, 125, 34, 56, 249, 193, 85,
            59, 205, 117, 103, 22, 47, 159, 162, 23, 109, 133, 25, 94, 30, 97,
            197, 85, 234, 222, 15, 102, 162, 182, 141, 83, 245, 72, 144, 3, 98,
            255, 220, 105, 73, 223, 181, 137, 78],
        &[151, 45, 51, 216, 100, 250, 3, 160, 30, 141, 60, 73, 199, 246, 150,
            43, 153, 127, 100, 161, 251, 174, 47, 139, 90, 98, 21, 255, 107,
            119, 54, 210, 27, 36, 37, 237, 174, 26, 75, 194, 221, 231, 120, 9,
            16, 21, 175, 78, 0, 92, 44, 154, 49, 41, 36, 179, 236, 135, 174,
            215, 122, 232, 159, 103, 134, 76, 18, 126, 121, 213, 25, 110, 78,
            228, 71, 245, 198, 126, 95, 115, 189, 165, 226, 89, 75, 122, 239,
            174, 144, 105, 213, 203, 119, 31, 195, 177, 211, 237, 57, 150, 68,
            219, 141, 112, 11, 43, 211, 148, 158, 148, 232, 25, 250, 54, 139,
            210, 10, 109, 231, 15, 96, 136, 67, 14, 54, 101, 46, 85, 70, 126,
            118, 243, 71, 158, 93, 57, 5, 130, 129, 70, 180, 124, 28, 121, 92,
            44, 20, 172, 75, 75, 147, 132, 222, 50, 118, 247, 170, 174, 46, 169,
            51, 239, 171, 31, 236, 183, 59, 7, 209, 56, 146, 148, 233, 210, 186,
            187, 23, 162, 240, 6, 146, 26, 191, 147, 91, 247, 235, 247, 36, 252,
            83, 169, 206, 224, 27, 35, 192, 6, 22, 194]
    )?;

    test(
        HashAlgorithm::Keccak_384,
        &[1, 2, 3],
        &[77, 96, 137, 47, 222, 127, 150, 123, 202, 189, 196, 124, 115, 18, 42,
            230, 49, 31, 161, 249, 190, 144, 215, 33, 218, 50, 3, 15, 116, 103,
            162, 227, 219, 63, 156, 203, 60, 116, 100, 131, 249, 210, 184, 118,
            227, 157, 239, 23],
        &[224, 18, 208, 78, 101, 229, 127, 246, 211, 129, 55, 127, 107, 169,
            250, 152, 233, 169, 88, 236, 16, 28, 132, 199, 108, 63, 212, 82, 1,
            35, 171, 189, 253, 78, 225, 191, 72, 111, 15, 136, 250, 169, 240,
            21, 193, 39, 1, 68]
    )?;

    test(
        HashAlgorithm::Keccak_512,
        &[1, 2, 3],
        &[237, 167, 101, 87, 108, 132, 198, 0, 237, 127, 93, 151, 81, 14, 146,
            112, 59, 97, 245, 33, 93, 239, 42, 22, 16, 55, 253, 157, 209, 245,
            182, 237, 79, 134, 206, 70, 7, 60, 14, 63, 52, 181, 45, 224, 40,
            158, 156, 97, 135, 152, 255, 249, 221, 75, 27, 254, 3, 91, 219, 134,
            69, 252, 110, 55],
        &[220, 64, 252, 23, 22, 193, 63, 68, 111, 114, 215, 249, 233, 241, 178,
            22, 245, 3, 220, 251, 244, 152, 180, 53, 25, 164, 231, 112, 229,
            205, 183, 212, 8, 187, 81, 116, 170, 177, 211, 246, 205, 110, 179,
            99, 160, 45, 199, 143, 37, 127, 84, 126, 229, 202, 195, 198, 212,
            28, 127, 226, 54, 35, 126, 202]
    )?;

    test(
        HashAlgorithm::Sha3_224,
        &[1, 2, 3],
        &[133, 48, 72, 251, 139, 17, 70, 43, 97, 0, 56, 86, 51, 192, 204, 141,
            205, 198, 226, 184, 227, 118, 194, 129, 2, 188, 132, 242],
        &[229, 34, 38, 134, 231, 23, 95, 44, 125, 210, 215, 122, 129, 91, 164,
            86, 162, 13, 63, 206, 59, 228, 113, 79, 16, 34, 81, 238]
    )?;

    test(
        HashAlgorithm::Sha3_256,
        &[1, 2, 3],
        &[26, 241, 122, 102, 78, 63, 168, 228, 25, 184, 186, 5, 194, 161, 115,
            22, 157, 247, 97, 98, 165, 162, 134, 224, 196, 5, 180, 96, 212, 120,
            247, 239],
        &[158, 122, 138, 237, 8, 250, 66, 254, 94, 69, 9, 63, 100, 97, 137, 78,
            19, 54, 74, 141, 187, 145, 193, 43, 205, 115, 200, 252, 235, 62,
            206, 71]
    )?;

    test(
        HashAlgorithm::Sha3_384,
        &[1, 2, 3],
        &[170, 154, 216, 164, 159, 49, 210, 221, 202, 187, 183, 1, 10, 21, 102,
            65, 124, 255, 128, 63, 239, 80, 235, 162, 57, 85, 136, 38, 248, 114,
            228, 104, 197, 116, 62, 127, 2, 107, 10, 142, 91, 45, 122, 28, 196,
            101, 205, 190],
        &[60, 241, 166, 134, 221, 151, 105, 241, 227, 200, 138, 34, 221, 199,
            29, 207, 226, 220, 0, 72, 152, 41, 44, 230, 20, 16, 111, 228, 131,
            99, 78, 104, 126, 153, 18, 20, 60, 170, 69, 60, 124, 142, 225, 123,
            79, 195, 127, 187]
    )?;

    test(
        HashAlgorithm::Sha3_512,
        &[1, 2, 3],
        &[56, 224, 92, 51, 215, 176, 103, 18, 127, 33, 125, 140, 133, 110, 85,
            79, 207, 240, 156, 147, 32, 184, 165, 151, 156, 226, 255, 93, 149,
            221, 39, 186, 53, 209, 251, 165, 12, 86, 45, 253, 29, 108, 196, 139,
            201, 197, 186, 164, 57, 8, 148, 65, 140, 201, 66, 217, 104, 249,
            123, 203, 101, 148, 25, 237],
        &[68, 212, 99, 48, 179, 100, 196, 177, 69, 68, 138, 155, 127, 96, 161,
            134, 73, 235, 57, 12, 60, 32, 46, 75, 220, 39, 83, 222, 121, 26,
            223, 162, 52, 229, 200, 128, 188, 230, 98, 166, 250, 81, 143, 28,
            253, 199, 158, 242, 90, 69, 10, 218, 232, 154, 171, 96, 190, 246,
            0, 253, 120, 127, 188, 136]
    )?;

    Ok(())
}

#[cfg(feature = "hashes-blake2")]
#[test]
#[inline]
fn blake2() -> std::io::Result<()> {
    test(
        HashAlgorithm::Blake2s,
        &[1, 2, 3],
        &[236, 157, 185, 4, 214, 54, 239, 97, 241, 66, 27, 43, 164, 113, 18,
            164, 250, 107, 137, 100, 253, 74, 10, 81, 72, 52, 69, 92, 33, 223,
            120, 18],
        &[223, 188, 135, 241, 224, 41, 78, 180, 154, 37, 14, 139, 129, 51, 194,
            239, 62, 230, 165, 177, 201, 207, 93, 242, 235, 11, 57, 129, 91, 56,
            140, 26]
    )?;

    test(
        HashAlgorithm::Blake2b,
        &[1, 2, 3],
        &[125, 253, 184, 136, 175, 113, 234, 224, 230, 166, 183, 81, 232, 227,
            65, 61, 118, 126, 244, 250, 82, 167, 153, 61, 170, 158, 240, 151,
            247, 170, 61, 148, 145, 153, 193, 19, 202, 163, 124, 148, 248, 12,
            243, 178, 47, 125, 157, 110, 79, 93, 239, 79, 249, 39, 131, 12, 255,
            228, 133, 124, 52, 190, 61, 137],
        &[29, 65, 175, 157, 116, 172, 86, 229, 111, 253, 205, 119, 99, 0, 234,
            217, 252, 149, 75, 13, 15, 98, 196, 151, 104, 188, 246, 71, 173,
            109, 206, 203, 205, 109, 48, 0, 214, 172, 33, 70, 132, 21, 92, 0,
            117, 152, 141, 183, 101, 20, 5, 49, 168, 93, 88, 178, 238, 186, 89,
            248, 223, 211, 90, 28]
    )?;

    Ok(())
}

#[cfg(feature = "hashes-blake3")]
#[test]
#[inline]
fn blake3() -> std::io::Result<()> {
    test(
        HashAlgorithm::Blake3,
        &[1, 2, 3],
        &[40, 138, 134, 167, 159, 32, 163, 214, 220, 205, 202, 119, 19, 190,
            174, 209, 120, 121, 130, 150, 189, 250, 121, 19, 250, 42, 98, 217,
            114, 123, 248, 248],
        &[204, 36, 52, 193, 6, 236, 18, 9, 110, 183, 251, 151, 232, 13, 207,
            136, 68, 2, 223, 68, 96, 100, 239, 125, 166, 66, 198, 21, 151, 17,
            178, 103]
    )
}
